#!/usr/bin/env python
# -*- coding: utf-8 -*-
#

import os
import sys
import math
import pprint

PWD = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(os.path.dirname(PWD))
sys.path.append(BASE_DIR)

from bahai_calendar import BahaiCalendar, GregorianCalendar


class DateTests(BahaiCalendar):
    START_K = -5
    END_K = 5
    START_G = 1544
    END_G = 3000

    TMP_ANS_DATES = (
        (2285073.5, (-299, 1, 1)), # (1544, 3, 11)
        (2288725.5, (-289, 1, 1)), # (1554, 3, 11)
        (2292377.5, (-279, 1, 1)), # (1564, 3, 10)
        (2296030.5, (-269, 1, 1)), # (1574, 3, 11)
        (2296395.5, (-268, 1, 1)), # (1575, 3, 11)
        (2296760.5, (-267, 1, 1)), # (1576, 3, 10)
        (2297126.5, (-266, 1, 1)), # (1577, 3, 11)
        (2297491.5, (-265, 1, 1)), # (1578, 3, 11)
        (2297856.5, (-264, 1, 1)), # (1579, 3, 11)
        (2298221.5, (-263, 1, 1)), # (1580, 3, 10)
        (2298587.5, (-262, 1, 1)), # (1581, 3, 11)
        (2298952.5, (-261, 1, 1)), # (1582, 3, 11)
        (2299317.5, (-260, 1, 1)), # (1583, 3, 21)
        (2299682.5, (-259, 1, 1)), # (1584, 3, 20)
        (2303335.5, (-249, 1, 1)), # (1594, 3, 21)
        (2306987.5, (-239, 1, 1)), # (1604, 3, 20)
        (2310640.5, (-229, 1, 1)), # (1614, 3, 21)
        (2314292.5, (-219, 1, 1)), # (1624, 3, 20)
        (2317944.5, (-209, 1, 1)), # (1634, 3, 20)
        (2321597.5, (-199, 1, 1)), # (1644, 3, 20)
        (2325249.5, (-189, 1, 1)), # (1654, 3, 20)
        (2328902.5, (-179, 1, 1)), # (1664, 3, 20)
        (2332554.5, (-169, 1, 1)), # (1674, 3, 20)
        (2336206.5, (-159, 1, 1)), # (1684, 3, 19)
        (2339859.5, (-149, 1, 1)), # (1694, 3, 20)
        (2340224.5, (-148, 1, 1)), # (1695, 3, 20)
        (2340589.5, (-147, 1, 1)), # (1696, 3, 19)
        (2340955.5, (-146, 1, 1)), # (1697, 3, 20)
        (2341320.5, (-145, 1, 1)), # (1698, 3, 20)
        (2341685.5, (-144, 1, 1)), # (1699, 3, 20)
        (2342050.5, (-143, 1, 1)), # (1700, 3, 20)
        (2342416.5, (-142, 1, 1)), # (1701, 3, 21)
        (2342781.5, (-141, 1, 1)), # (1702, 3, 21)
        (2343146.5, (-140, 1, 1)), # (1703, 3, 21)
        (2343511.5, (-139, 1, 1)), # (1704, 3, 20)
        (2347164.5, (-129, 1, 1)), # (1714, 3, 21)
        (2350816.5, (-119, 1, 1)), # (1724, 3, 20)
        (2354469.5, (-109, 1, 1)), # (1734, 3, 21)
        (2358121.5, ( -99, 1, 1)), # (1744, 3, 20)
        (2361773.5, ( -89, 1, 1)), # (1754, 3, 20)
        (2365426.5, ( -79, 1, 1)), # (1764, 3, 20)
        (2369078.5, ( -69, 1, 1)), # (1774, 3, 20)
        (2372731.5, ( -59, 1, 1)), # (1784, 3, 20)
        (2376383.5, ( -49, 1, 1)), # (1794, 3, 20)
        (2376748.5, ( -48, 1, 1)), # (1795, 3, 20)
        (2377114.5, ( -47, 1, 1)), # (1796, 3, 20)
        (2377479.5, ( -46, 1, 1)), # (1797, 3, 20)
        (2377844.5, ( -45, 1, 1)), # (1798, 3, 20)
        (2378209.5, ( -44, 1, 1)), # (1799, 3, 20)
        (2378575.5, ( -43, 1, 1)), # (1800, 3, 21)
        (2378940.5, ( -42, 1, 1)), # (1801, 3, 21)
        (2379305.5, ( -41, 1, 1)), # (1802, 3, 21)
        (2379670.5, ( -40, 1, 1)), # (1803, 3, 21)
        (2380036.5, ( -39, 1, 1)), # (1804, 3, 21)
        (2383688.5, ( -29, 1, 1)), # (1814, 3, 21)
        (2387340.5, ( -19, 1, 1)), # (1824, 3, 20)
        (2390993.5, (  -9, 1, 1)), # (1834, 3, 21)
        (2394645.5, (   1, 1, 1)), # (1844, 3, 20)
        (2398298.5, (  11, 1, 1)), # (1854, 3, 21)
        (2401950.5, (  21, 1, 1)), # (1864, 3, 20)
        (2405603.5, (  31, 1, 1)), # (1874, 3, 21)
        (2409255.5, (  41, 1, 1)), # (1884, 3, 20)
        (2412907.5, (  51, 1, 1)), # (1894, 3, 20)
        (2414734.5, (  56, 1, 1)), # (1899, 3, 21)
        (2415099.5, (  57, 1, 1)), # (1900, 3, 21)
        (2415464.5, (  58, 1, 1)), # (1901, 3, 21)
        (2415829.5, (  59, 1, 1)), # (1902, 3, 21)
        (2416195.5, (  60, 1, 1)), # (1903, 3, 22)
        (2416560.5, (  61, 1, 1)), # (1904, 3, 21)
        (2420212.5, (  71, 1, 1)), # (1914, 3, 21)
        (2423865.5, (  81, 1, 1)), # (1924, 3, 21)
        (2427517.5, (  91, 1, 1)), # (1934, 3, 21)
        (2431170.5, ( 101, 1, 1)), # (1944, 3, 21)
        (2434822.5, ( 111, 1, 1)), # (1954, 3, 21)
        (2438474.5, ( 121, 1, 1)), # (1964, 3, 20)
        (2442127.5, ( 131, 1, 1)), # (1974, 3, 21)
        (2445779.5, ( 141, 1, 1)), # (1984, 3, 20)
        (2449432.5, ( 151, 1, 1)), # (1994, 3, 21)
        (2453084.5, ( 161, 1, 1)), # (2004, 3, 20)
        (2456736.5, ( 171, 1, 1)), # (2014, 3, 20)
        (2460389.5, ( 181, 1, 1)), # (2024, 3, 20)
        (2464041.5, ( 191, 1, 1)), # (2034, 3, 20)
        (2467694.5, ( 201, 1, 1)), # (2044, 3, 20)
        (2471346.5, ( 211, 1, 1)), # (2054, 3, 20)
        (2474999.5, ( 221, 1, 1)), # (2064, 3, 20)
        (2478651.5, ( 231, 1, 1)), # (2074, 3, 20)
        (2482303.5, ( 241, 1, 1)), # (2084, 3, 19)
        (2485956.5, ( 251, 1, 1)), # (2094, 3, 20)
        (2487782.5, ( 256, 1, 1)), # (2099, 3, 20)
        (2488147.5, ( 257, 1, 1)), # (2100, 3, 20)
        (2488513.5, ( 258, 1, 1)), # (2101, 3, 21)
        (2488878.5, ( 259, 1, 1)), # (2102, 3, 21)
        (2489243.5, ( 260, 1, 1)), # (2103, 3, 21)
        (2489608.5, ( 261, 1, 1)), # (2104, 3, 20)
        (2493261.5, ( 271, 1, 1)), # (2114, 3, 21)
        (2496913.5, ( 281, 1, 1)), # (2124, 3, 20)
        (2500566.5, ( 291, 1, 1)), # (2134, 3, 21)
        (2504218.5, ( 301, 1, 1)), # (2144, 3, 20)
        (2507870.5, ( 311, 1, 1)), # (2154, 3, 20)
        (2511523.5, ( 321, 1, 1)), # (2164, 3, 20)
        (2515175.5, ( 331, 1, 1)), # (2174, 3, 20)
        (2518828.5, ( 341, 1, 1)), # (2184, 3, 20)
        (2522480.5, ( 351, 1, 1)), # (2194, 3, 20)
        (2522845.5, ( 352, 1, 1)), # (2195, 3, 20)
        (2523211.5, ( 353, 1, 1)), # (2196, 3, 20)
        (2523576.5, ( 354, 1, 1)), # (2197, 3, 20)
        (2523941.5, ( 355, 1, 1)), # (2198, 3, 20)
        (2524306.5, ( 356, 1, 1)), # (2199, 3, 20)
        (2524671.5, ( 357, 1, 1)), # (2200, 3, 20)
        (2525037.5, ( 358, 1, 1)), # (2201, 3, 21)
        (2525402.5, ( 359, 1, 1)), # (2202, 3, 21)
        (2525767.5, ( 360, 1, 1)), # (2203, 3, 21)
        (2526133.5, ( 361, 1, 1)), # (2204, 3, 21)
        (2529785.5, ( 371, 1, 1)), # (2214, 3, 21)
        (2533437.5, ( 381, 1, 1)), # (2224, 3, 20)
        (2537090.5, ( 391, 1, 1)), # (2234, 3, 21)
        (2540742.5, ( 401, 1, 1)), # (2244, 3, 20)
        (2544395.5, ( 411, 1, 1)), # (2254, 3, 21)
        (2548047.5, ( 421, 1, 1)), # (2264, 3, 20)
        (2551699.5, ( 431, 1, 1)), # (2274, 3, 20)
        (2555352.5, ( 441, 1, 1)), # (2284, 3, 20)
        (2559004.5, ( 451, 1, 1)), # (2294, 3, 20)
        (2559370.5, ( 452, 1, 1)), # (2295, 3, 21)
        (2559735.5, ( 453, 1, 1)), # (2296, 3, 20)
        (2560100.5, ( 454, 1, 1)), # (2297, 3, 20)
        (2560465.5, ( 455, 1, 1)), # (2298, 3, 20)
        (2560831.5, ( 456, 1, 1)), # (2299, 3, 21)
        (2561196.5, ( 457, 1, 1)), # (2300, 3, 21)
        (2561561.5, ( 458, 1, 1)), # (2301, 3, 21)
        (2561926.5, ( 459, 1, 1)), # (2302, 3, 21)
        (2562291.5, ( 460, 1, 1)), # (2303, 3, 21)
        (2562657.5, ( 461, 1, 1)), # (2304, 3, 21)
        (2566309.5, ( 471, 1, 1)), # (2314, 3, 21)
        (2569962.5, ( 481, 1, 1)), # (2324, 3, 21)
        (2573614.5, ( 491, 1, 1)), # (2334, 3, 21)
        (2577266.5, ( 501, 1, 1)), # (2344, 3, 20)
        (2580919.5, ( 511, 1, 1)), # (2354, 3, 21)
        (2584571.5, ( 521, 1, 1)), # (2364, 3, 20)
        (2588224.5, ( 531, 1, 1)), # (2374, 3, 21)
        (2591876.5, ( 541, 1, 1)), # (2384, 3, 20)
        (2595529.5, ( 551, 1, 1)), # (2394, 3, 21)
        (2599181.5, ( 561, 1, 1)), # (2404, 3, 20)
        (2602833.5, ( 571, 1, 1)), # (2414, 3, 20)
        (2606486.5, ( 581, 1, 1)), # (2424, 3, 20)
        (2610138.5, ( 591, 1, 1)), # (2434, 3, 20)
        (2613791.5, ( 601, 1, 1)), # (2444, 3, 20)
        (2617443.5, ( 611, 1, 1)), # (2454, 3, 20)
        (2621096.5, ( 621, 1, 1)), # (2464, 3, 20)
        (2624748.5, ( 631, 1, 1)), # (2474, 3, 20)
        (2628400.5, ( 641, 1, 1)), # (2484, 3, 19)
        (2632053.5, ( 651, 1, 1)), # (2494, 3, 20)
        (2632418.5, ( 652, 1, 1)), # (2495, 3, 20)
        (2632783.5, ( 653, 1, 1)), # (2496, 3, 19)
        (2633149.5, ( 654, 1, 1)), # (2497, 3, 20)
        (2633514.5, ( 655, 1, 1)), # (2498, 3, 20)
        (2633879.5, ( 656, 1, 1)), # (2499, 3, 20)
        (2634244.5, ( 657, 1, 1)), # (2500, 3, 20)
        (2634609.5, ( 658, 1, 1)), # (2501, 3, 20)
        (2634975.5, ( 659, 1, 1)), # (2502, 3, 21)
        (2635340.5, ( 660, 1, 1)), # (2503, 3, 21)
        (2635705.5, ( 661, 1, 1)), # (2504, 3, 20)
        (2639358.5, ( 671, 1, 1)), # (2514, 3, 21)
        (2643010.5, ( 681, 1, 1)), # (2524, 3, 20)
        (2646662.5, ( 691, 1, 1)), # (2534, 3, 20)
        (2650315.5, ( 701, 1, 1)), # (2544, 3, 20)
        (2653967.5, ( 711, 1, 1)), # (2554, 3, 20)
        (2657620.5, ( 721, 1, 1)), # (2564, 3, 20)
        (2661272.5, ( 731, 1, 1)), # (2574, 3, 20)
        (2664925.5, ( 741, 1, 1)), # (2584, 3, 20)
        (2668577.5, ( 751, 1, 1)), # (2594, 3, 20)
        (2668942.5, ( 752, 1, 1)), # (2595, 3, 20)
        (2669308.5, ( 753, 1, 1)), # (2596, 3, 20)
        (2669673.5, ( 754, 1, 1)), # (2597, 3, 20)
        (2670038.5, ( 755, 1, 1)), # (2598, 3, 20)
        (2670403.5, ( 756, 1, 1)), # (2599, 3, 20)
        (2670768.5, ( 757, 1, 1)), # (2600, 3, 20)
        (2671134.5, ( 758, 1, 1)), # (2601, 3, 21)
        (2671499.5, ( 759, 1, 1)), # (2602, 3, 21)
        (2671864.5, ( 760, 1, 1)), # (2603, 3, 21)
        (2672229.5, ( 761, 1, 1)), # (2604, 3, 20)
        (2675882.5, ( 771, 1, 1)), # (2614, 3, 21)
        (2679534.5, ( 781, 1, 1)), # (2624, 3, 20)
        (2683187.5, ( 791, 1, 1)), # (2634, 3, 21)
        (2686839.5, ( 801, 1, 1)), # (2644, 3, 20)
        (2690492.5, ( 811, 1, 1)), # (2654, 3, 21)
        (2694144.5, ( 821, 1, 1)), # (2664, 3, 20)
        (2697796.5, ( 831, 1, 1)), # (2674, 3, 20)
        (2701449.5, ( 841, 1, 1)), # (2684, 3, 20)
        (2705101.5, ( 851, 1, 1)), # (2694, 3, 20)
        (2705466.5, ( 852, 1, 1)), # (2695, 3, 20)
        (2705832.5, ( 853, 1, 1)), # (2696, 3, 20)
        (2706197.5, ( 854, 1, 1)), # (2697, 3, 20)
        (2706562.5, ( 855, 1, 1)), # (2698, 3, 20)
        (2706927.5, ( 856, 1, 1)), # (2699, 3, 20)
        (2707293.5, ( 857, 1, 1)), # (2700, 3, 21)
        (2707658.5, ( 858, 1, 1)), # (2701, 3, 21)
        (2708023.5, ( 859, 1, 1)), # (2702, 3, 21)
        (2708388.5, ( 860, 1, 1)), # (2703, 3, 21)
        (2708754.5, ( 861, 1, 1)), # (2704, 3, 21)
        (2712406.5, ( 871, 1, 1)), # (2714, 3, 21)
        (2716059.5, ( 881, 1, 1)), # (2724, 3, 21)
        (2719711.5, ( 891, 1, 1)), # (2734, 3, 21)
        (2723363.5, ( 901, 1, 1)), # (2744, 3, 20)
        (2727016.5, ( 911, 1, 1)), # (2754, 3, 21)
        (2730668.5, ( 921, 1, 1)), # (2764, 3, 20)
        (2734321.5, ( 931, 1, 1)), # (2774, 3, 21)
        (2737973.5, ( 941, 1, 1)), # (2784, 3, 20)
        (2741625.5, ( 951, 1, 1)), # (2794, 3, 20)
        (2745278.5, ( 961, 1, 1)), # (2804, 3, 20)
        (2748930.5, ( 971, 1, 1)), # (2814, 3, 20)
        (2752583.5, ( 981, 1, 1)), # (2824, 3, 20)
        (2756235.5, ( 991, 1, 1)), # (2834, 3, 20)
        (2759888.5, (1001, 1, 1)), # (2844, 3, 20)
        (2763540.5, (1011, 1, 1)), # (2854, 3, 20)
        (2767193.5, (1021, 1, 1)), # (2864, 3, 20)
        (2770845.5, (1031, 1, 1)), # (2874, 3, 20)
        (2774497.5, (1041, 1, 1)), # (2884, 3, 19)
        (2778150.5, (1051, 1, 1)), # (2894, 3, 20)
        (2778515.5, (1052, 1, 1)), # (2895, 3, 20)
        (2778880.5, (1053, 1, 1)), # (2896, 3, 19)
        (2779245.5, (1054, 1, 1)), # (2897, 3, 19)
        (2779611.5, (1055, 1, 1)), # (2898, 3, 20)
        (2779976.5, (1056, 1, 1)), # (2899, 3, 20)
        (2780341.5, (1057, 1, 1)), # (2900, 3, 20)
        (2780707.5, (1058, 1, 1)), # (2901, 3, 21)
        (2781072.5, (1059, 1, 1)), # (2902, 3, 21)
        (2781437.5, (1060, 1, 1)), # (2903, 3, 21)
        (2781802.5, (1061, 1, 1)), # (2904, 3, 20)
        (2785455.5, (1071, 1, 1)), # (2914, 3, 21)
        (2789107.5, (1081, 1, 1)), # (2924, 3, 20)
        (2792759.5, (1091, 1, 1)), # (2934, 3, 20)
        (2796412.5, (1101, 1, 1)), # (2944, 3, 20)
        (2800064.5, (1111, 1, 1)), # (2954, 3, 20)
        (2803717.5, (1121, 1, 1)), # (2964, 3, 20)
        (2807369.5, (1131, 1, 1)), # (2974, 3, 20)
        (2811022.5, (1141, 1, 1)), # (2984, 3, 20)
        (2814674.5, (1151, 1, 1)), # (2994, 3, 20)
        )

    def __init__(self):
        self.gc = GregorianCalendar()

    def _calc_kvymd(self, days, k, v, y, m, data):
        year = (k - 1) * 361 + (v - 1) * 19 + y

        for d in reversed(range(1, days)):
            data.append(((k, v, y, m, d), (year, m, d)))

    def create_date_lists(self):
        data = []

        for k in reversed(range(self.START_K, self.END_K)):
            for v in reversed(range(1, 20)):
                for y in reversed(range(1, 20)):
                    for m in reversed(range(0, 20)):
                        if m == 0:
                            self._calc_kvymd(5, k, v, y, m, data)
                        else:
                            self._calc_kvymd(20, k, v, y, m, data)

        return data

    def check_b_date_from_date(self, data):
        items = []

        for item in data:
            b_date, date = item
            bd = self.b_date_from_date(date)

        if bd != (b_date + (0, 0, 0)):
            items.append((item, bd))

        return items

    def _create_gregorian_date_range(self, md=(3, 20)):
        return [(year,) + md for year in range(self.START_G, self.END_G, 10)]

    def _create_jd_for_gulian_date(self, data):
        return [self.gc.jd_from_gregorian_date(date) for date in data]

    def analize_date_error(self):
        #g_data = self._create_gregorian_date_range()
        #jds = self._create_jd_for_gulian_date(g_data)
        #z = zip(jds, g_data)
        #pprint.pprint([d for d in z])
        data = []
        diff = 0

        for jd, date in self.TMP_ANS_DATES:
            year = date[0]
            month = date[1]
            day = date[2]

            if month == 0: # Ayyam-i-Ha
                d = 18 * 19 + day
            elif month < 19:
                d = (month - 1) * 19 + day
            else: # month == 19:
                d = 18 * 19 + 4 + day

            badi_epoch_m_o = self.BADI_EPOCH - 1
            # Tropical Year: 365.242189
            # Sidereal Year: 365.25636
            # Anomalistic Year: 365.25964
            jey_y_m_o = 365.242189 * (year - 1)
            floor_jey = math.floor(jey_y_m_o)
            bjd = badi_epoch_m_o + floor_jey + d

            diff = bjd - jd
            data.append((date, jd, bjd, jey_y_m_o, floor_jey, diff))

        return data


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(
        description=("Test Badi date ranges."))
    parser.add_argument(
        '-l', '--list', action='store_true', default=False, dest='list',
        help="Generate a list of Badi dates both ling and short versions.")
    parser.add_argument(
        '-c', '--ck-dates', action='store_true', default=False, dest='ck_dates',
        help="Check that b_date_from_date() works correctly.")
    parser.add_argument(
        '-a', '--analize', action='store_true', default=False, dest='analize',
        help="Analize Badi date errors when converting to jd.")
    options = parser.parse_args()
    exclusive_error = (options.list, options.ck_dates, options.analize)
    assert exclusive_error.count(True) <= 1, (
        "Options -l, -c, and -a are exclusive.")

    dt = DateTests()

    if options.list:
        data = dt.create_date_lists()
        pprint.pprint(data)

    if options.ck_dates:
        data = dt.create_date_lists()
        bad_items = dt.check_b_date_from_date(data)
        bad_items = bad_items if bad_items else "All dates match."
        pprint.pprint(bad_items)

    if options.analize:
        data = dt.analize_date_error()
        pprint.pprint(data)
        print(len(data), len([item[-1] for item in data if item[-1] != 0.0]))

    sys.exit(0)
